#!/usr/bin/env bash

## Resolve this script's location, to locate the fortune files
## If you call a symlink of it, it still reports the source location 
## Taken from https://stackoverflow.com/a/246128
SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
    SOURCE=$(readlink "$SOURCE")
    [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE 
done
DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
# echo $DIR # debugging print

# Can't set inside if-else block so set by default
# See https://www.reddit.com/r/bash/comments/17yp7xn/shopt_doesnt_setunset_inside_an_ifblock/
shopt -s extglob


if [ $# -eq 0 ]; then
    # Call the original fortune passing custom fortunes as arg 
    # Need extended globbing
    fortune "$DIR"/fortunes/!(*.dat)

elif [ "$1" = "--update" ]; then
    # Update the index for the fortunes
    rm "$DIR"/fortunes/*.dat
    for file in "$DIR"/fortunes/*
    do
        strfile -c % "$file" "$file".dat
    done

elif [ "$1" = "--search" ]; then
    # Default search in all fortunes
    shift
    grep "$@" "$DIR"/fortunes/* --color=auto

elif [ "$1" = "--fzf" ]; then
    # Interactive search using fzf wrapper
    # Need extended globbing
    cat "$DIR"/fortunes/!(*.dat) | fzf

# Bad arguments
else
    echo "Usage: ./fortune [ --update | --search query | --fzf ]"
fi 

exit 0
